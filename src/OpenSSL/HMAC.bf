/*
* Generated by util/mkerr.pl DO NOT EDIT
* Copyright 1995-2019 The OpenSSL Project Authors. All Rights Reserved.
*
* Licensed under the OpenSSL license (the "License").  You may not use
* this file except in compliance with the License.  You can obtain a copy
* in the file LICENSE in the source distribution or at
* https://www.openssl.org/source/license.html
*/
using System;

namespace Beef_Net.OpenSSL
{
	sealed abstract class HMAC
	{
		public const int MAX_MD_CBLOCK = 128; /* Deprecated */

		[CRepr]
		public struct ctx_st
		{
		    public EVP.MD* md;
		    public EVP.MD_CTX* md_ctx;
		    public EVP.MD_CTX* i_ctx;
		    public EVP.MD_CTX* o_ctx;
		}
		public typealias CTX = ctx_st;

		[Import(OPENSSL_LIB_CRYPTO), LinkName("HMAC_size")]
		public extern static uint size(CTX* e);
		[Import(OPENSSL_LIB_CRYPTO), LinkName("HMAC_CTX_new")]
		public extern static CTX* CTX_new();
		[Import(OPENSSL_LIB_CRYPTO), LinkName("HMAC_CTX_reset")]
		public extern static int CTX_reset(CTX* ctx);
		[Import(OPENSSL_LIB_CRYPTO), LinkName("HMAC_CTX_free")]
		public extern static void CTX_free(CTX* ctx);
		
		[Import(OPENSSL_LIB_CRYPTO), LinkName("HMAC_Init")]
		public extern static int Init(CTX* ctx, void* key, int len, EVP.MD* md);
		
		[Import(OPENSSL_LIB_CRYPTO), LinkName("HMAC_Init_ex")]
		public extern static int Init_ex(CTX* ctx, void* key, int len, EVP.MD* md, Engine.ENGINE* impl);
		[Import(OPENSSL_LIB_CRYPTO), LinkName("HMAC_Update")]
		public extern static int Update(CTX* ctx, uint8* data, uint len);
		[Import(OPENSSL_LIB_CRYPTO), LinkName("HMAC_Final")]
		public extern static int Final(CTX* ctx, uint8* md, uint* len);
		[Import(OPENSSL_LIB_CRYPTO), CLink]
		public extern static uint8* HMAC(EVP.MD* evp_md, void* key, int key_len, uint8* d, uint n, uint8* md, uint* md_len);
		[Import(OPENSSL_LIB_CRYPTO), LinkName("HMAC_CTX_copy")]
		public extern static int CTX_copy(CTX* dctx, CTX* sctx);
		
		[Import(OPENSSL_LIB_CRYPTO), LinkName("HMAC_CTX_set_flags")]
		public extern static void CTX_set_flags(CTX* ctx, uint flags);
		[Import(OPENSSL_LIB_CRYPTO), LinkName("HMAC_CTX_get_md")]
		public extern static EVP.MD* CTX_get_md(CTX* ctx);
	}
}
