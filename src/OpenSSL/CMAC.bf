/*
* Generated by util/mkerr.pl DO NOT EDIT
* Copyright 1995-2019 The OpenSSL Project Authors. All Rights Reserved.
*
* Licensed under the OpenSSL license (the "License").  You may not use
* this file except in compliance with the License.  You can obtain a copy
* in the file LICENSE in the source distribution or at
* https://www.openssl.org/source/license.html
*/
using System;

namespace Beef_Net.OpenSSL
{
	[AlwaysInclude]
	sealed abstract class CMAC
	{
#if !OPENSSL_NO_CMAC
		/* Opaque */
		[CRepr]
		public struct CTX_st
		{
			/* Cipher context to use */
			public EVP.CIPHER_CTX* cctx;
			/* Keys k1 and k2 */
			public uint8[EVP.MAX_BLOCK_LENGTH] k1;
			public uint8[EVP.MAX_BLOCK_LENGTH] k2;
			/* Temporary block */
			public uint8[EVP.MAX_BLOCK_LENGTH] tbl;
			/* Last (possibly partial) block */
			public uint8[EVP.MAX_BLOCK_LENGTH] last_block;
			/* Number of bytes in last block: -1 means context not initialised */
			public int nlast_block;
		}
		public typealias CTX = CTX_st;
		
		[
#if !OPENSSL_LINK_STATIC
			Import(OPENSSL_LIB_CRYPTO),
#endif
			LinkName("CMAC_CTX_new")
		]
		public extern static CTX* CTX_new();
		[
#if !OPENSSL_LINK_STATIC
			Import(OPENSSL_LIB_CRYPTO),
#endif
			LinkName("CMAC_CTX_cleanup")
		]
		public extern static void CTX_cleanup(CTX* ctx);
		[
#if !OPENSSL_LINK_STATIC
			Import(OPENSSL_LIB_CRYPTO),
#endif
			LinkName("CMAC_CTX_free")
		]
		public extern static void CTX_free(CTX* ctx);
		[
#if !OPENSSL_LINK_STATIC
			Import(OPENSSL_LIB_CRYPTO),
#endif
			LinkName("CMAC_CTX_get0_cipher_ctx")
		]
		public extern static EVP.CIPHER_CTX* CTX_get0_cipher_ctx(CTX* ctx);
		[
#if !OPENSSL_LINK_STATIC
			Import(OPENSSL_LIB_CRYPTO),
#endif
			LinkName("CMAC_CTX_copy")
		]
		public extern static int CTX_copy(CTX* outVal, CTX* inVal);
		
		[
#if !OPENSSL_LINK_STATIC
			Import(OPENSSL_LIB_CRYPTO),
#endif
			LinkName("CMAC_Init")
		]
		public extern static int Init(CTX* ctx, void* key, uint keylen, EVP.CIPHER* cipher, Engine.ENGINE* impl);
		[
#if !OPENSSL_LINK_STATIC
			Import(OPENSSL_LIB_CRYPTO),
#endif
			LinkName("CMAC_Update")
		]
		public extern static int Update(CTX* ctx, void* data, uint dlen);
		[
#if !OPENSSL_LINK_STATIC
			Import(OPENSSL_LIB_CRYPTO),
#endif
			LinkName("CMAC_Final")
		]
		public extern static int Final(CTX* ctx, uint8* outVal, uint* poutlen);
		[
#if !OPENSSL_LINK_STATIC
			Import(OPENSSL_LIB_CRYPTO),
#endif
			LinkName("CMAC_resume")
		]
		public extern static int resume(CTX* ctx);
#endif
	}
}
