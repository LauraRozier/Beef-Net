/*
* Generated by util/mkerr.pl DO NOT EDIT
* Copyright 1995-2019 The OpenSSL Project Authors. All Rights Reserved.
*
* Licensed under the OpenSSL license (the "License").  You may not use
* this file except in compliance with the License.  You can obtain a copy
* in the file LICENSE in the source distribution or at
* https://www.openssl.org/source/license.html
*/
using System;

namespace Beef_Net.OpenSSL
{
	[AlwaysInclude]
	sealed abstract class Cast
	{
#if !OPENSSL_NO_CAST
		public const int ENCRYPT = 1;
		public const int DECRYPT = 0;
		
		public typealias LONG = uint;
		
		public const int CAST_BLOCK = 8;
		public const int KEY_LENGTH = 16;

		[CRepr]
		public struct key_st
		{
		    public LONG[32] data;
		    public int short_key; /* Use reduced rounds for short key */
		}
		public typealias KEY = key_st;
		
		[Import(OPENSSL_LIB_CRYPTO), LinkName("CAST_set_key")]
		public extern static void set_key(KEY* key, int len, uint8* data);
		[Import(OPENSSL_LIB_CRYPTO), LinkName("CAST_ecb_encrypt")]
		public extern static void ecb_encrypt(uint8* inVal, uint8* outVal, KEY* key, int enc);
		[Import(OPENSSL_LIB_CRYPTO), LinkName("CAST_encrypt")]
		public extern static void encrypt(LONG* data, KEY* key);
		[Import(OPENSSL_LIB_CRYPTO), LinkName("CAST_decrypt")]
		public extern static void decrypt(LONG* data, KEY* key);
		[Import(OPENSSL_LIB_CRYPTO), LinkName("CAST_cbc_encrypt")]
		public extern static void cbc_encrypt(uint8* inVal, uint8* outVal, int length, KEY* ks, uint8* iv, int enc);
		[Import(OPENSSL_LIB_CRYPTO), LinkName("CAST_cfb64_encrypt")]
		public extern static void cfb64_encrypt(uint8* inVal, uint8* outVal, int length, KEY* schedule, uint8* ivec, int *num, int enc);
		[Import(OPENSSL_LIB_CRYPTO), LinkName("CAST_ofb64_encrypt")]
		public extern static void ofb64_encrypt(uint8* inVal, uint8* outVal, int length, KEY* schedule, uint8* ivec, int *num);
#endif
	}
}
