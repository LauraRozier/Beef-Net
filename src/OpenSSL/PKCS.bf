/*
* Generated by util/mkerr.pl DO NOT EDIT
* Copyright 1995-2019 The OpenSSL Project Authors. All Rights Reserved.
*
* Licensed under the OpenSSL license (the "License").  You may not use
* this file except in compliance with the License.  You can obtain a copy
* in the file LICENSE in the source distribution or at
* https://www.openssl.org/source/license.html
*/
using System;

namespace Beef_Net.OpenSSL
{
	[AlwaysInclude]
	sealed abstract class PKCS5
	{
		public const int SALT_LEN     = 8;
		/* Default PKCS#5 iteration count */
		public const int DEFAULT_ITER = 2048;

		

		/* PKCS5 password based encryption */
		[Import(OPENSSL_LIB_CRYPTO), LinkName("PKCS5_PBE_keyivgen")]
		public extern static int PBE_keyivgen(EVP.CIPHER_CTX* ctx, char8* pass, int passlen, ASN1.TYPE* param, EVP.CIPHER* cipher, EVP.MD* md, int en_de);
		[Import(OPENSSL_LIB_CRYPTO), LinkName("PKCS5_PBKDF2_HMAC_SHA1")]
		public extern static int PBKDF2_HMAC_SHA1(char8* pass, int passlen, uint8* salt, int saltlen, int iter, int keylen, uint8* outVal);
		[Import(OPENSSL_LIB_CRYPTO), LinkName("PKCS5_PBKDF2_HMAC")]
		public extern static int PBKDF2_HMAC(char8* pass, int passlen, uint8* salt, int saltlen, int iter, EVP.MD* digest, int keylen, uint8* outVal);
		[Import(OPENSSL_LIB_CRYPTO), LinkName("PKCS5_v2_PBE_keyivgen")]
		public extern static int v2_PBE_keyivgen(EVP.CIPHER_CTX* ctx, char8* pass, int passlen, ASN1.TYPE* param, EVP.CIPHER* cipher, EVP.MD* md, int en_de);

#if !OPENSSL_NO_SCRYPT
		[Import(OPENSSL_LIB_CRYPTO), LinkName("PKCS5_v2_scrypt_keyivgen")]
		public extern static int v2_scrypt_keyivgen(EVP.CIPHER_CTX* ctx, char8* pass, int passlen, ASN1.TYPE* param, EVP.CIPHER* c, EVP.MD* md, int en_de);
#endif

		[Import(OPENSSL_LIB_CRYPTO), LinkName("PKCS5_PBE_add")]
		public extern static void PBE_add();
	}
	
	[AlwaysInclude]
	sealed abstract class PKCS7
	{
	}
	
	[AlwaysInclude]
	sealed abstract class PKCS8
	{
	}
	
	[AlwaysInclude]
	sealed abstract class PKCS12
	{
	}
}
